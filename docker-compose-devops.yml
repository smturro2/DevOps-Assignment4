name: countries-app-devops

services:
  # See: https://hub.docker.com/_/mysql
  # ASKED CHAT GPT: I have a /docker-compose.yml file and a /src/db/schema.sql How do I create my sql db with the schema file?  I use mysql

  # see 
  #  - https://github.com/Douglas0n/jenkins-docker/blob/master/docker-compose.yml
  #  - https://github.com/gounthar/MyFirstAndroidAppBuiltByJenkins/blob/main/jenkins/docker-compose.yml
  jenkins-controller:
    build:
      context: ./src/jenkins
      dockerfile: Dockerfile
    # image: jenkins/jenkins:lts
    networks:
      - jenkins
    environment:
      DOCKER_HOST: tcp://docker:2376
      DOCKER_CERT_PATH: /certs/client
      DOCKER_TLS_VERIFY: '1'
    ports:
      - 8080:8080
      - 50000:50000
    volumes:
      - jenkins-data:/var/jenkins_home
      - jenkins-docker-certs:/certs/client:ro
      # - /var/run/docker.sock:/var/run/docker.sock  # Bind mount Docker socket so jenkins can use docker
  
  # See
  #  - https://www.jenkins.io/doc/book/installing/docker/#on-windows
  docker:
    image: docker:dind
    privileged: true
    networks:
      - jenkins
    environment:
      DOCKER_TLS_CERTDIR: /certs
    volumes:
      - jenkins-docker-certs:/certs/client
      - jenkins-data:/var/jenkins_home
    ports:
      - "2376:2376"
  
  # jenkins-agent:
  #   image: jenkins/ssh-agent:jdk11
  #   # environment:
  #   #   - JENKINS_AGENT_SSH_PUBKEY=${JENKINS_AGENT_SSH_PUBLIC_KEY}

  # see https://medium.com/@denis.verkhovsky/sonarqube-with-docker-compose-complete-tutorial-2aaa8d0771d4
  sonarqube:
    image: sonarqube:lts-community
    depends_on:
      - sonar_db
    environment:
      SONAR_JDBC_URL: jdbc:postgresql://sonar_db:5432/sonar
      SONAR_JDBC_USERNAME: sonar
      SONAR_JDBC_PASSWORD: sonar
    ports:
      - "9001:9000"
    volumes:
      - sonarqube_conf:/opt/sonarqube/conf
      - sonarqube_data:/opt/sonarqube/data
      - sonarqube_extensions:/opt/sonarqube/extensions
      - sonarqube_logs:/opt/sonarqube/logs
      - sonarqube_temp:/opt/sonarqube/temp
      
  sonar_db:
    image: postgres:13
    environment:
      POSTGRES_USER: sonar
      POSTGRES_PASSWORD: sonar
      POSTGRES_DB: sonar
    volumes:
      - sonar_db:/var/lib/postgresql
      - sonar_db_data:/var/lib/postgresql/data
      
  # see: https://ngrok.com/docs/using-ngrok-with/docker/
  ngrok-jenkins:
    image: ngrok/ngrok:latest
    command:
      - "http"
      # - "http://localhost:5000/"
      # - "http://api:5000/"
      - "http://host.docker.internal:8080"
    environment:
      NGROK_AUTHTOKEN: ${NGROK_AUTHTOKEN}
    ports:
      - 4040:4040

networks:
  jenkins:

volumes:
  sonarqube_conf:
  sonarqube_data:
  sonarqube_extensions:
  sonarqube_logs:
  sonarqube_temp:
  sonar_db:
  sonar_db_data:
  jenkins-data:
  jenkins-docker-certs:
  # jenkins-agent-data:
  qodana-data:

